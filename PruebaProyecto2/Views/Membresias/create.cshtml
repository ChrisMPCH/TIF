@model GYMISFAMILY.Models.BaseDeDatos.TipoMembresia

@{
    ViewData["Title"] = "Crear Tipo de Membresía";
}

<div class="container py-4">
    <h2>Crear Tipo de Membresía</h2>
    <div class="card">
        <div class="card-body">
            <form asp-action="Create" method="post" id="membresiaForm">
                <div class="mb-3">
                    <label asp-for="Nombre" class="form-label">Nombre</label>
                    <input asp-for="Nombre" class="form-control" />
                    <span asp-validation-for="Nombre" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="Tipo" class="form-label">Tipo</label>
                    <select asp-for="Tipo" class="form-select" id="Tipo">
                        <option value="0">Días</option>
                        <option value="1">Semanal</option>
                        <option value="2">Mensual</option>
                    </select>
                    <span asp-validation-for="Tipo" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="Tiempo" class="form-label">Tiempo</label>
                    <input asp-for="Tiempo" class="form-control" id="TiempoInput" type="number" min="1" />
                    <span asp-validation-for="Tiempo" class="text-danger"></span>
                    <small class="text-muted">El tiempo debe ser un número positivo</small>
                </div>

                <div class="mb-3">
                    <label class="form-label">Días Calculados</label>
                    <input type="text" id="DiasCalculados" class="form-control" readonly />
                </div>

                <div class="mb-3">
                    <label asp-for="Precio" class="form-label">Precio</label>
                    <input asp-for="Precio" class="form-control" type="number" step="0.01" min="0" />
                    <span asp-validation-for="Precio" class="text-danger"></span>
                </div>

                <button type="submit" class="btn btn-primary">Guardar</button>
                <a asp-action="Index" class="btn btn-secondary">Cancelar</a>
            </form>
        </div>
    </div>
</div>

<style>
    body {
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        background-color: #f0f8ff;
        margin: 0;
        padding: 40px;
        display: flex;
        justify-content: center;
        align-items: center;
        min-height: 100vh;
    }

    .container {
        width: 90%;
        max-width: 600px;
    }

    h2 {
        color: #337ab7;
        font-size: 2.2em;
        text-align: center;
        margin-bottom: 20px;
    }

    .card {
        background-color: white;
        border-radius: 12px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
        overflow: hidden;
        border: 1px solid #ddd;
    }

    .card-body {
        padding: 30px;
    }

    .form-label {
        font-weight: bold;
        color: #333;
        margin-bottom: 0.5rem;
        display: block;
    }

    .form-control {
        width: 100%;
        padding: 0.8rem;
        border: 1px solid #ccc;
        border-radius: 6px;
        margin-bottom: 1rem;
        font-size: 0.9em;
    }

        .form-control:focus {
            outline: none;
            border-color: #007bff;
            box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
        }

    .text-danger {
        color: #dc3545;
        font-size: 0.8em;
        display: block;
        margin-top: -0.8rem;
        margin-bottom: 1rem;
    }

    .text-muted {
        color: #6c757d;
        font-size: 0.8em;
        display: block;
        margin-top: -0.8rem;
        margin-bottom: 1rem;
    }

    .btn {
        display: inline-block;
        padding: 10px 18px;
        border: none;
        border-radius: 6px;
        color: white;
        text-decoration: none;
        cursor: pointer;
        font-size: 0.9em;
        transition: all 0.3s ease;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        margin-top: 1rem;
        margin-right: 0.5rem;
    }

        .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
        }

    .btn-primary {
        background-color: #007bff;
    }

        .btn-primary:hover {
            background-color: #0056b3;
        }

    .btn-secondary {
        background-color: #6c757d;
    }

        .btn-secondary:hover {
            background-color: #545b62;
        }

    .mb-3 {
        margin-bottom: 1.5rem;
    }

    .is-invalid {
        border-color: #dc3545;
    }

    .is-valid {
        border-color: #28a745;
    }
</style>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const tiempoInput = document.getElementById('TiempoInput');
            const tipoSelect = document.getElementById('Tipo');
            const diasCalculados = document.getElementById('DiasCalculados');
            const form = document.getElementById('membresiaForm');

            // Calcular días al cambiar valores
            tiempoInput.addEventListener('input', calcularDias);
            tipoSelect.addEventListener('change', calcularDias);

            // Validar antes de enviar el formulario
            form.addEventListener('submit', function(e) {
                if (!validarTiempo()) {
                    e.preventDefault();
                }
            });

            function calcularDias() {
                const tiempo = parseInt(tiempoInput.value) || 0;
                const tipo = parseInt(tipoSelect.value);
                let dias = tiempo;

                if (tipo === 1) { // Semanal
                    dias *= 7;
                } else if (tipo === 2) { // Mensual
                    dias *= 30;
                }

                diasCalculados.value = dias;
                validarTiempo();
            }

            function validarTiempo() {
                const tiempo = parseInt(tiempoInput.value);

                if (isNaN(tiempo) || tiempo <= 0) {
                    tiempoInput.classList.add('is-invalid');
                    tiempoInput.classList.remove('is-valid');
                    return false;
                } else {
                    tiempoInput.classList.remove('is-invalid');
                    tiempoInput.classList.add('is-valid');
                    return true;
                }
            }

            // Validación inicial
            calcularDias();
        });
    </script>
}